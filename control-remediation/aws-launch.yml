---
- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - vars/ec2-vars

  tasks:

    - name: Launch some instances
      ec2:
        access_key: "{{ ec2_access_key }}"
        secret_key: "{{ ec2_secret_key }}"
        keypair: "{{ ec2_keypair }}"
        group: "{{ ec2_security_group }}"
        type: "{{ ec2_instance_type }}"
        image: "{{ ec2_image }}"
        region: "{{ ec2_region }}"
        instance_tags: "{'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_''{{ demo_tag_name }}'}"
        count: "{{ ec2_instance_count }}"
        wait: true
        user_data: |
                   #!/bin/bash
                   TOWER=webinar.demo.testing.ansible.com
                   JOB=13
                   KEY=20adb4b293ebee61607700956a97cf07
                   
                   retry_attempts=10
                   attempt=0
                   while [[ $attempt -lt $retry_attempts ]]
                   do
                       status_code=`curl -s -k -i --data "host_config_key=${KEY}" https://${TOWER}/api/v1/job_templates/${JOB}/callback/ | head -n 1 | awk '{print $2}'`
                       if [[ $status_code == 202 ]]
                           then
                           exit 0
                       fi
                       attempt=$(( attempt + 1 ))
                       echo "${status_code} received... retrying in 1 minute. (Attempt ${attempt})"
                       sleep 60
                   done
                   exit 1
      register: ec2

    - name: Wait for instances to boot
      local_action: pause seconds=30

    - name: Wait for SSH to come up
      become: false
      connection: local
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        timeout: 60
        state: started
      with_items:
        - "{{ ec2.instances }}"
